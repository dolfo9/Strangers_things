{"version":3,"sources":["components/AccountForm.js","components/DeletePost.js","components/PostAdd.js","components/Message.js","components/PostLists.js","components/Profile.js","index.js"],"names":["AccountForm","type","setToken","setUser","useState","username","setUsername","password","setPassword","title","oppositeTitle","oppositeType","handleSubmit","event","a","preventDefault","fetch","method","headers","body","JSON","stringify","user","response","json","data","token","onSubmit","value","onChange","target","placeholder","to","DeletePost","props","id","fetchPosts","handleDelete","console","log","onClick","PostAdd","post","setPost","setTitle","description","setDescription","price","setPrice","Message","message","setMessage","content","PostList","posts","setPosts","useEffect","className","map","author","isAuthor","_id","Profile","hasMessages","messages","length","fromUser","App","localStorage","getItem","removeItem","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.70ea7090.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport {Link} from 'react-router-dom'; \r\n\r\nconst AccountForm = ({type, setToken, setUser}) => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const title = type === 'login' ? 'Login' : 'Register';\r\n  const oppositeTitle = type === 'login' ? 'Register' : 'Login';\r\n  const oppositeType = type === 'login' ? 'register' : 'login';\r\n\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    //console.log('username: ', username);\r\n    //console.log('password: ', password);\r\n    const response = await fetch(`https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/users/${type}`, { // or use the `/users/login` route for login!\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        user: {\r\n          username,\r\n          password\r\n        }\r\n      })\r\n    });\r\n    //console.log('response: ', response);\r\n    const {data} = await response.json();\r\n    //console.log('{data}: ', {data});\r\n    const token = data?.token;\r\n    //console.log('token: ', token);\r\n    if (token) {\r\n      setToken(token);\r\n      const response = await fetch(`https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/users/me`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n        },\r\n      });\r\n      const {data} = await response.json();\r\n      //console.log('data: ', data);\r\n      setUser(data);\r\n    }\r\n    setUsername('');\r\n    setPassword('');\r\n  }\r\n\r\n  return <>\r\n    <h2>{title}</h2>\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" value={username} onChange={(event) => setUsername(event.target.value)}placeholder=\"username\"></input>\r\n      <input type=\"password\" value={password} onChange={(event) => setPassword(event.target.value)}placeholder=\"password\"></input>\r\n      <button type=\"submit\">{title}</button>\r\n    </form>    \r\n    <Link to={`/${oppositeType}`}>{oppositeTitle}</Link>\r\n  </>\r\n}\r\n\r\nexport default AccountForm;","import React from 'react'\r\n\r\nconst DeletePost = (props) => {\r\n\r\n    const {id, fetchPosts, token} = (props)\r\n\r\n\r\n    if (!token) {\r\n      return\r\n    }\r\n\r\n    const handleDelete = async () => {\r\n        const response = await fetch\r\n        (`https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/posts/${id}`,\r\n        {\r\n          method: 'DELETE',\r\n            headers:{\r\n              'Content-type': 'application/json',\r\n              'Authorization': 'Bearer ' + token\r\n            }\r\n          }\r\n        )\r\n        \r\n        console.log(response)\r\n        fetchPosts()\r\n    }\r\n\r\n    return <button onClick={handleDelete}>Delete</button>\r\n}\r\n\r\nexport default DeletePost","import React, { useState } from 'react'\r\n\r\nconst PostAdd = (props) => {\r\n    const {token, post, setPost} = props\r\n    const [title, setTitle] = useState ('')\r\n    const [description, setDescription] = useState ('')\r\n    const [price, setPrice] = useState ('')\r\n\r\n const onSubmit = async (event) => {\r\n     event.preventDefault()\r\n     const response = await fetch ('https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/posts',\r\n     {\r\n         method: 'POST',\r\n         headers: {\r\n             'Content-type':'application/json',\r\n             'Authorization': `Bearer ${token}`\r\n         },\r\n         body: JSON.stringify ({\r\n             post: {\r\n                 title: title,\r\n                 description: description,\r\n                 price: price\r\n             }\r\n         })\r\n     })\r\n\r\n     const {data} = await response.json()\r\n     setPost([data.post, ...post])\r\n     setTitle('')\r\n     setDescription('')\r\n     setPrice('')\r\n}\r\n\r\nreturn <>\r\n<h2>Add Post</h2>\r\n<form onSubmit={onSubmit}>\r\n<input type=\"text\" value={title} placeholder=\"title\" onChange={(event) => {setTitle(event.target.value)}}></input>\r\n<input type=\"text\" value={description} placeholder=\"description\" onChange={(event) => {setDescription(event.target.value)}}></input>\r\n<input type=\"text\" value={price} placeholder=\"price\" onChange={(event) => {setPrice(event.target.value)}}></input>\r\n<button>Submit Post</button>\r\n</form></>\r\n}\r\n\r\nexport default PostAdd; ","import React, {useState} from 'react';\r\n\r\nconst Message = (props) => {\r\n\r\n    const {token, id} = props\r\n\r\n    \r\n    const [message, setMessage] = useState('')\r\n    \r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault()\r\n        const response = await fetch(`https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/posts/${id}/messages`,\r\n        {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n\r\n            },\r\n            body: JSON.stringify({\r\n                message: {\r\n                    content: message\r\n                }\r\n            })\r\n        })\r\n        console.log('message', response)\r\n        setMessage('')\r\n    }\r\n\r\n    \r\n    return <form onSubmit={handleSubmit}>\r\n        <input type='text' value={message} onChange={(event) => {\r\n            setMessage(event.target.value)\r\n        }}></input>\r\n        <button>Send</button>\r\n    </form>\r\n}\r\n\r\nexport default Message","import React, { useState, useEffect } from 'react';\r\nimport DeletePost from './DeletePost';\r\nimport PostAdd from './PostAdd';\r\nimport Message from './Message';\r\n\r\n\r\nconst PostList = ({token}) => {\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    const fetchPosts = async () => {\r\n      const response = await fetch(`https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/posts`,\r\n    {\r\n      method: 'GET',\r\n        headers:{\r\n          'Content-type': 'application/json',\r\n          'Authorization': 'Bearer ' + token\r\n        }\r\n      }\r\n    )\r\n    \r\n    const {data} = await response.json();\r\n    //console.log (data.posts)\r\n    setPosts (data.posts)\r\n\r\n    }\r\n\r\n    useEffect (async () => {\r\n        fetchPosts()\r\n      },[]);\r\n      return <>\r\n      \r\n      {token? <PostAdd token={token} post={posts} setPost={setPosts}></PostAdd>: ''}\r\n      <div className='postList'>\r\n      <h2>Posts</h2>\r\n\r\n      {\r\n          posts.map ((post) => {\r\n              return <div key={post._id}>\r\n                <h3>{post.title}</h3>\r\n                <p>From: {post.author.username}</p>\r\n                <p>{post.price}</p>\r\n                {post.isAuthor ? <DeletePost fetchPosts={fetchPosts} id={post._id} token={token}/> : ''}\r\n                {!post.isAuthor && token ? <Message id={post._id} token={token}/> : ''}\r\n                </div>\r\n          })\r\n      }\r\n\r\n      </div></>\r\n\r\n}\r\n\r\nexport default PostList;","const Profile = (props) => {\r\n\r\n    const {user} = props\r\n    console.log(user)\r\n\r\n    const hasMessages = user.messages && user.messages.length > 0\r\n\r\n\r\n    return <div className='profile'>\r\n        <h3>Profile</h3>\r\n        <h5>Messages</h5> {\r\n            hasMessages? user.messages.map((message) => {\r\n                return <div className='message'>\r\n                    <h6>{message.post.title}</h6>\r\n                    <p>Message: {message.content}</p>\r\n                    <p>From: {message.fromUser.username}</p>\r\n\r\n                </div>\r\n            }) : ''\r\n        }\r\n    </div>\r\n}\r\n\r\n\r\nexport default Profile;","import React, { useReducer, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter as Router, Route, Link} from 'react-router-dom';\r\n\r\n\r\nimport './bootstrap.css';\r\nimport {\r\n  AccountForm,\r\n  PostList,\r\n  Profile,\r\n} from './components';\r\n\r\n\r\nconst App = () => {\r\n  const [token, setToken] = useState(localStorage.getItem('token') || '');\r\n  const [user, setUser] = useState({});\r\n  //console.log('token: ', token);\r\n  \r\n\r\n\r\n  return <>\r\n    <h1>\r\n      Strangers Things\r\n    </h1>\r\n    {user.username && <div>Hello {user.username}<button onClick={() => {\r\n      setUser({})\r\n      setToken('')\r\n      localStorage.removeItem('token')\r\n    }}>Logout</button></div> }\r\n    <Link to='/login'>Login</Link>\r\n    <Link to='/posts'>Post</Link>\r\n    {token ? <Link to='/profile'>Profile</Link>: ''}\r\n    <Route path=\"/login\">\r\n      <AccountForm type={'login'} setToken={setToken} setUser={setUser}/>\r\n    </Route>\r\n    <Route path=\"/register\">\r\n      <AccountForm type={'register'} setToken={setToken} setUser={setUser}/>\r\n    </Route>\r\n    <Route path= '/posts'>\r\n    \r\n        <PostList token={token}/>\r\n    </Route>\r\n    <Route path='/profile'>\r\n        <Profile user={user}/>\r\n    </Route>\r\n  </>\r\n}\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('app'),\r\n);"],"sourceRoot":""}